- question: "What is the main theme of Chapter 1 in Clean Code?"
  choices:
    - "Importance of writing clean, readable, and maintainable code"
    - "Introduction to different programming languages"
    - "History of software development"
    - "Advanced data structures and algorithms"
  correct: "Importance of writing clean, readable, and maintainable code"

- question: "Which of the following is NOT a characteristic of clean code mentioned in Chapter 1?"
  choices:
    - "Readable"
    - "Maintainable"
    - "Efficient"
    - "Obfuscated"
  correct: "Obfuscated"

- question: "According to Chapter 1, what is the primary goal of writing clean code?"
  choices:
    - "To impress other developers with complex solutions"
    - "To create code that is easy to read, understand, and modify"
    - "To utilize all available resources efficiently"
    - "To reduce the number of lines of code"
  correct: "To create code that is easy to read, understand, and modify"

- question: "Who is primarily responsible for ensuring code is clean, according to Chapter 1?"
  choices:
    - "Project manager"
    - "Quality assurance team"
    - "Software developer"
    - "End user"
  correct: "Software developer"

- question: "In Chapter 1, which metaphor is used to describe the state of the codebase in a typical project?"
  choices:
    - "A well-oiled machine"
    - "A tangled web"
    - "A broken window"
    - "A clear river"
  correct: "A broken window"

- question: "What role do unit tests play in writing clean code, as discussed in Chapter 1?"
  choices:
    - "They are optional and can be skipped"
    - "They help ensure the code works as intended and facilitate refactoring"
    - "They slow down the development process"
    - "They are only necessary for large projects"
  correct: "They help ensure the code works as intended and facilitate refactoring"

- question: "According to Chapter 1, what is the benefit of writing small functions?"
  choices:
    - "They are faster to write"
    - "They are easier to test and understand"
    - "They use less memory"
    - "They require fewer comments"
  correct: "They are easier to test and understand"

- question: "In Chapter 1, what is mentioned as a key practice for maintaining clean code over time?"
  choices:
    - "Writing extensive documentation"
    - "Regularly refactoring the codebase"
    - "Using the latest programming language features"
    - "Minimizing collaboration between developers"
  correct: "Regularly refactoring the codebase"

- question: "What does Chapter 1 suggest about naming conventions in clean code?"
  choices:
    - "Names should be short and cryptic"
    - "Names should be descriptive and meaningful"
    - "Names should be randomly chosen"
    - "Names are not important as long as the code works"
  correct: "Names should be descriptive and meaningful"

- question: "According to Chapter 1, how should code reviews be approached?"
  choices:
    - "As a way to criticize other developers"
    - "As a collaborative effort to improve code quality"
    - "As a formality to be done quickly"
    - "As an opportunity to rewrite others' code"
  correct: "As a collaborative effort to improve code quality"
